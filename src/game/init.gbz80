INCLUDE "hardware.inc"
INCLUDE "cartridgeHeader.inc"

SECTION "Header", ROM0[$100]
	nop
    jp EntryPoint
	HEADER
SECTION "Init", ROM0
EntryPoint:
    di
VBlankWait:
    ld a, [rLY]
    cp 144
    jr c, VBlankWait

    ld a, LCDCF_OFF ;turn off screen
    ld [rLCDC], a

    ld de, spriteData
    ld hl, tileBlock0
    ld bc, SPRITESIZE
    call copyTiles ;copy sprite tiles

    ld de, bgData
    ld hl, tileBlock2
    ld bc, BGSIZE
    call copyTiles ;copy background tiles

    ld d, 0
    ld hl, tileMap0
    ld bc, SCRN_VX_B * SCRN_VY_B
    call memset ;zerofill the background

    ;clear oam
    ld d, 0
    ld hl, oamShadowStart
    ld bc, OAM_COUNT * sizeof_OAM_ATTRS
    call memset ;zerofill shadowOam to avoid weird glitch sprites showing up

    ;set DMA code
    ld de, OAMDMAHandlerCode
    ld hl, OAMDMAHandler
    ld bc, OAMDMAHandlerCode.end - OAMDMAHandlerCode
    call memcpy  ;copying the OAM DMA routine to HRAM so that i can call it whenever i want (especially in vblank)

	ld a, HIGH(oamShadowStart)
    call OAMDMAHandler ;oam DMA of oamShadow to avoid garbage data being in OAM when 

    ld a, LCDCF_ON | LCDCF_BGON | LCDCF_OBJON
    ld [rLCDC], a

    ld a, %11100100
    ld [rBGP], a

    xor %11111111 ;have the opposite for Objects
    ld [rOBP0], a

    ld a, IEF_VBLANK ;let's enable VBlank interrupt
    ld [rIE], a

    ld a, 0 ;initialize a few values
    ld [gamestate], a ;title screen game state
    ld [firstStateFrame], a ;flag to check whether the first frame has been initialized or not
    ld [introFrameCnt], a ;frame counter for intro, used for random seed
    ld [playerAnim], a ;player anim state
    ld [backgroundX], a ;scrolling, to avoid weird effects

	ld [lastInput], a ;input handling, to avoid weird pad signals to be read during the first frame potentially
	ld [currentInput], a
	ld [pressedInput], a
	ld [releasedInput], a

	ld [mainFrameCnt], a
	ld [mainFrameCnt+1], a

	ld [playerPosX], a
	ld [playerPosX+1], a
	ld [playerVelX], a
	ld [playerVelX+1], a
	ld [playerPosY], a
	ld [playerPosY+1], a
	ld [playerVelY], a
	ld [playerVelY+1], a

    ei
    jp main

SECTION "gfxData", ROM0

TileData:
spriteData:
INCBIN "sprite.2bpp"
DEF SPRITESIZE = @ - TileData
bgData:
INCBIN "bg.2bpp"
DEF BGSIZE = @ - bgData
DEF TILEDATASIZE = @ - TileData
